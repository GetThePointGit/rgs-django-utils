[project]
channels = ["conda-forge"]
name = "rgs-django-utils"
platforms = ["win-64", "linux-64", "osx-arm64"]
repository = "https://github.com/GetThePointGit/rgs-django-utils"


[feature.dev.tasks]
# development
lab = "jupyter lab --notebook-dir=jupyter"  # start notebook

pre-commit-install = "pre-commit install --install-hooks -t=pre-push" #-t=pre-commit
postinstall = { depends-on = ["pre-commit-install"] }
pre-commit-run = "pre-commit run --all-files"

# Styling
sort_imports = "ruff check  ./**/*.py --select I --fix --force-exclude"
fmt = "ruff format ./**/*.py --force-exclude"
style = { depends-on = ["sort_imports", "fmt"] } # `pixi run style`

# build
build_wheels = "rm -rf dist/ && python -m build" # build wheels
twine_check = "twine check dist/*"
build = { depends-on = ["build_wheels", "twine_check"] }

# test
tests = 'pytest --cov-report term-missing --cov=rgs_django_utils --cov-report=xml'
test_manage = 'python tests/manage.py'

[dependencies]
python = "3.12.*"

GDAL = "*"
geopandas = "1.0.*"
numpy = "1.26.*"
pandas = "2.2.*"
shapely = "2.0.*"

python-dotenv = ">=1.1.0,<2"
psycopg = "3.2.*"

pip = "*"

[pypi-dependencies]
django = ">=5.0"

django-ninja = "==1.4.*"

# used for generation of RSA keys (for JWT) and for pyJWT
cryptography = ">=42.0.0"
pyJWT = ">=2.8.0"

# used for geopandas
SqlAlchemy = "==2.0.*"
GeoAlchemy2 = "==0.15.*"

# xlsxwriter (over openpyxl) because it is faster and has better support for styling
xlsxwriter = "==3.*"  # used for exporting excel files

rgs-django-utils = { path = ".", editable = true }

[feature.dev.dependencies]
jupyterlab = "*"
ipywidgets = "*"
jupytext = "*"
pre-commit = "*"
twine = "*"
ruff = "*"

# for memory profiling of tasks
psutil = "*"

pixi-pycharm = ">=0.0.8,<0.0.9"

[feature.dev.pypi-dependencies]
notebook = "*"
build = "*"

pytest-django = "*"
pytest-cov = "*"

[feature.prod.tasks]
echo_info = "echo $PATH"

[environments]
default = { features = ["dev"], solve-group = "prod" }
prod = { features = [], solve-group = "prod" }
