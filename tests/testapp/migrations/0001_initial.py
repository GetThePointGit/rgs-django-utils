# Generated by Django 5.2.1 on 2025-06-21 14:54

import django.db.models.deletion
import rgs_django_utils.database.dj_extended_models
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='EnumExtendedTestModel',
            fields=[
                ('id', rgs_django_utils.database.dj_extended_models.TextStringField(primary_key=True, serialize=False, verbose_name='code')),
                ('name', rgs_django_utils.database.dj_extended_models.TextStringField(verbose_name='name')),
            ],
            options={
                'db_table': 'enum_extended_test_model',
            },
        ),
        migrations.CreateModel(
            name='EnumTestModel',
            fields=[
                ('id', rgs_django_utils.database.dj_extended_models.TextStringField(primary_key=True, serialize=False, verbose_name='code')),
                ('name', rgs_django_utils.database.dj_extended_models.TextStringField(verbose_name='name')),
            ],
            options={
                'db_table': 'enum_test_model',
            },
        ),
        migrations.CreateModel(
            name='MiddleModel',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('ids', models.TextField()),
            ],
            options={
                'verbose_name': 'verbose_middle_model',
            },
        ),
        migrations.CreateModel(
            name='ParentModel',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('ids', models.TextField()),
                ('int_field', models.IntegerField(default=0)),
            ],
            options={
                'verbose_name': 'verbose_parent_model',
            },
        ),
        migrations.CreateModel(
            name='EnumExtendedTestModelExtended',
            fields=[
                ('name', rgs_django_utils.database.dj_extended_models.TextStringField(verbose_name='name')),
                ('description', models.TextField()),
                ('id', rgs_django_utils.database.dj_extended_models.OneToOneField(db_column='id', on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='extended', serialize=False, to='testapp.enumextendedtestmodel')),
            ],
            options={
                'db_table': 'enum_extended_test_model_ext',
            },
        ),
        migrations.CreateModel(
            name='MiddleExtendedModel',
            fields=[
                ('id', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='extended', serialize=False, to='testapp.middlemodel')),
                ('extra', models.TextField()),
            ],
            options={
                'verbose_name': 'middle_extended_model',
            },
        ),
        migrations.CreateModel(
            name='ManyToManyModel',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('ids', models.TextField()),
                ('middle_model_m2m', models.ManyToManyField(to='testapp.middlemodel')),
            ],
            options={
                'verbose_name': 'verbose_middle_model',
            },
        ),
        migrations.CreateModel(
            name='ChildModel',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('ids', models.TextField()),
                ('int_field', models.IntegerField(default=0)),
                ('middle_model', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='testapp.middlemodel')),
            ],
            options={
                'verbose_name': 'verbose_child_model',
            },
        ),
        migrations.AddField(
            model_name='middlemodel',
            name='parent_model',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='testapp.parentmodel', verbose_name='verbose_parent_model'),
        ),
    ]
